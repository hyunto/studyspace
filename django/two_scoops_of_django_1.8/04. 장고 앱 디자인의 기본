# 장고 앱 디자인의 기본


## 기본 용어
* 장고 프로젝트 : 장고 웹 프레임워크를 기반으로 한 웹 애플리케이션을 지칭한다.
* 장고 앱 : 프로젝트의 한 기능을 표현하기 위해 디자인된 작은 라이브러리를 지칭한다. 장고 프로젝트는 다수의 장고 앱으로 구성되어 있다.
* INSTALLED_APPS : 프로젝트에서 이용하기 위해 settings.py의 INSTALLED_APPS 세팅에 설정한 장고 앱들을 지칭한다.
* 서드 파티 장고 패키지 : 파이썬 패키지 도구들에 의해 패키디화 된, 재사용 가능한 플러그인 형태로 이용 가능한 장고 앱을 지칭한다.


## 장고 앱 디자인 핵심
> "좋은 장고 앱을 정의하고 개발하는 것은 Douglas Mcllroy의 유닉스 철학을 따르는 것이다. '한 번에 한 가지 일을 하고 그 한 가지 일을 매우 충실히 하는 프로그램을 짜는 것이다.'"
> 
> *- James Bennett -*

각 앱은 그 앱의 주어진 입무에만 집중할 수 있어야 한다.

어떤 앱의 성격 및 기능은 한 문장으로 설명할 수 있어야 하고, '그리고 / 또한'과 같은 단어가 들어간다면 앱을 쪼개야 할 때가 온 것이다.


## 장고 앱 이름 정하기
* 한 단어로 된 이름 사용
* 대체로 앱의 중심이 되는 모델 이름의 복수 형태로 사용 (예외 존재)
* URL 주소를 고려하여 정할 것
* PEP-8 규약에 맞는 이름을 사용


## 확신 없이는 앱을 확장하지 않는다.
앱을 만들고 쪼개는 과정은 문제가 될 일은 아니다. 다만 앱들은 될 수 있으면 작은 단위로 유지하는 것이 좋다.


## 앱 안에는 어떤 모듈이 위치하는가?
앱은 **공통 모듈**과 **비공토 모듈**로 구분할 수 있다.

**공통 모듈**은 대부분의 앱에서 사용되는 포맷이며 반드시 따를 필요는 없으나 협업을 위해 따르는 것이 좋다.

**비공통 모듈**은 전역 환경에서 이용되는 것이 아니라 앱 레벨에 적용되는 모듈들이다.

```python
# 공통 모듈
scoops/
	__init__.py
	admin.py
	forms.py
	management/
	migrations/
	models.py
	templatetags/
	tests/
	urls.py
	views.py
	
# 비공통 모듈
scoops/
	behaviors.py
	contants.py
	context_processors.py
	decorators.py
	db/
	exceptions
	fields.py
	factories.py
	helpers.py
	managers.py
	middleware.py
	signals.py
	utils.py
	viewmixins.py
```


